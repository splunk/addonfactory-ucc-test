name: CI

on:
  push:
    branches:
      - "main"
      - "develop"
      - "release/**"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: [ main, develop, "release/**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      matrix_supportedSplunk: ${{ steps.matrix.outputs.supportedSplunk }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        uses: splunk/addonfactory-test-matrix-action@v1.10

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - uses: pre-commit/action@v3.0.0

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - run: curl -sSL https://install.python-poetry.org | python3 - --version 1.5.1
      - run: poetry install
      - name: Build UCC test
        run: |
          poetry build
      - uses: actions/upload-artifact@v3
        with:
          name: UCC-test-build
          path: dist/

  test-unit:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: curl -sSL https://install.python-poetry.org | python3 - --version 1.5.1
      - run: |
          poetry install
          poetry run pytest tests/unit

  test-splunk:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - meta
    strategy:
      matrix:
        splunk: ${{ fromJson(needs.meta.outputs.matrix_supportedSplunk) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install Splunk
        run: |
          pip install Flask
          python tests/functional/demo_rest_endpoints_generator/endpoints_exposer.py
          sleep 5
          curl -X PATCH -H "Content-Type: application/json" -d '{"key": "new_value"}' http://localhost:5000/endpoint1
          curl http://localhost:5000/endpoint1

      # - run: curl -sSL https://install.python-poetry.org | python3 - --version 1.5.1
      # - name: Install Splunk
      #   run: |
      #     export SPLUNK_PRODUCT=splunk
      #     export SPLUNK_VERSION=${{ matrix.splunk.version }}
      #     export SPLUNK_BUILD=${{ matrix.splunk.build }}
      #     export SPLUNK_SLUG=$SPLUNK_VERSION-$SPLUNK_BUILD
      #     export SPLUNK_ARCH=x86_64
      #     export SPLUNK_LINUX_FILENAME=splunk-${SPLUNK_VERSION}-${SPLUNK_BUILD}-Linux-${SPLUNK_ARCH}.tgz
      #     export SPLUNK_BUILD_URL=https://download.splunk.com/products/${SPLUNK_PRODUCT}/releases/${SPLUNK_VERSION}/linux/${SPLUNK_LINUX_FILENAME}
      #     echo "$SPLUNK_BUILD_URL"
      #     export SPLUNK_HOME=/opt/splunk
      #     wget -qO /tmp/splunk.tgz "${SPLUNK_BUILD_URL}"
      #     sudo tar -C /opt -zxf /tmp/splunk.tgz

      #     sudo cp -r tests/functional/data/solnlib_demo $SPLUNK_HOME/etc/apps
      #     sudo cp -r solnlib $SPLUNK_HOME/etc/apps/solnlib_demo/bin/
      #     sudo mkdir -p $SPLUNK_HOME/etc/apps/Splunk_TA_test/default/
      #     sudo chown -R "$USER":"$USER" /opt/splunk
      #     ls $SPLUNK_HOME/etc/apps/solnlib_demo/bin/
      #     echo -e "[user_info]\nUSERNAME=Admin\nPASSWORD=Chang3d"'!' | sudo tee -a /opt/splunk/etc/system/local/user-seed.conf
      #     echo 'OPTIMISTIC_ABOUT_FILE_LOCKING=1' | sudo tee -a /opt/splunk/etc/splunk-launch.conf
      #     sudo /opt/splunk/bin/splunk start --accept-license
      #     sudo /opt/splunk/bin/splunk cmd python -m pip install solnlib
      #     sudo /opt/splunk/bin/splunk set servername custom-servername -auth admin:Chang3d!
      #     sudo /opt/splunk/bin/splunk restart
      #     until curl -k -s -u admin:Chang3d! https://localhost:8089/services/server/info\?output_mode\=json | jq '.entry[0].content.kvStoreStatus' | grep -o "ready" ; do echo -n "Waiting for KVStore to become ready-" && sleep 5 ; done
      #   timeout-minutes: 5
      # - name: Run tests
      #   run: |
      #     poetry install
      #     SPLUNK_HOME=/opt/splunk/ poetry run pytest --junitxml=test-results/results.xml -v tests/integration
      - uses: actions/upload-artifact@v3
        with:
          name: test-splunk
          path: test-results