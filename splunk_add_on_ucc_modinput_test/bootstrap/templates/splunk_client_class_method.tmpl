    
    def {{method_name}}(self{{method_args}}) -> Dict:
        try:
            kwargs = dict({{api_args}})
            kwargs = {k:v for k,v in kwargs.items() if v is not None}
            response = self.ta_api.{{api_name}}(**kwargs)
            logger.debug(f"TA API {{api_name}} response: {response}")
{% if method_type == "delete" %}
            return  None
{% elif method_type == "get" or method_type == "create" or method_type == "update"%}
            return  response.to_dict().get("entry",[{}])[0].get("content")
{% else %}
            return  response.to_dict().get("entry",[])
{% endif %}
        except ApiException as e:
            logger.error(f"Exception when calling TA API {{api_name}}: {e}")
            raise SplunkApiError(e) from e

